/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectAndJob implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long projectAndJobId;
    private Integer requiredNumber;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private String projectCode;
    private String jobName;

    public ProjectAndJob() {}

    public ProjectAndJob(ProjectAndJob value) {
        this.projectAndJobId = value.projectAndJobId;
        this.requiredNumber = value.requiredNumber;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
        this.projectCode = value.projectCode;
        this.jobName = value.jobName;
    }

    public ProjectAndJob(
        Long projectAndJobId,
        Integer requiredNumber,
        LocalDateTime createdAt,
        LocalDateTime updatedAt,
        String projectCode,
        String jobName
    ) {
        this.projectAndJobId = projectAndJobId;
        this.requiredNumber = requiredNumber;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.projectCode = projectCode;
        this.jobName = jobName;
    }

    /**
     * Getter for <code>sion.project_and_job.project_and_job_id</code>.
     */
    public Long getProjectAndJobId() {
        return this.projectAndJobId;
    }

    /**
     * Setter for <code>sion.project_and_job.project_and_job_id</code>.
     */
    public void setProjectAndJobId(Long projectAndJobId) {
        this.projectAndJobId = projectAndJobId;
    }

    /**
     * Getter for <code>sion.project_and_job.required_number</code>.
     */
    public Integer getRequiredNumber() {
        return this.requiredNumber;
    }

    /**
     * Setter for <code>sion.project_and_job.required_number</code>.
     */
    public void setRequiredNumber(Integer requiredNumber) {
        this.requiredNumber = requiredNumber;
    }

    /**
     * Getter for <code>sion.project_and_job.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>sion.project_and_job.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>sion.project_and_job.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>sion.project_and_job.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>sion.project_and_job.project_code</code>.
     */
    public String getProjectCode() {
        return this.projectCode;
    }

    /**
     * Setter for <code>sion.project_and_job.project_code</code>.
     */
    public void setProjectCode(String projectCode) {
        this.projectCode = projectCode;
    }

    /**
     * Getter for <code>sion.project_and_job.job_name</code>.
     */
    public String getJobName() {
        return this.jobName;
    }

    /**
     * Setter for <code>sion.project_and_job.job_name</code>.
     */
    public void setJobName(String jobName) {
        this.jobName = jobName;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ProjectAndJob other = (ProjectAndJob) obj;
        if (this.projectAndJobId == null) {
            if (other.projectAndJobId != null)
                return false;
        }
        else if (!this.projectAndJobId.equals(other.projectAndJobId))
            return false;
        if (this.requiredNumber == null) {
            if (other.requiredNumber != null)
                return false;
        }
        else if (!this.requiredNumber.equals(other.requiredNumber))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.projectCode == null) {
            if (other.projectCode != null)
                return false;
        }
        else if (!this.projectCode.equals(other.projectCode))
            return false;
        if (this.jobName == null) {
            if (other.jobName != null)
                return false;
        }
        else if (!this.jobName.equals(other.jobName))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.projectAndJobId == null) ? 0 : this.projectAndJobId.hashCode());
        result = prime * result + ((this.requiredNumber == null) ? 0 : this.requiredNumber.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.projectCode == null) ? 0 : this.projectCode.hashCode());
        result = prime * result + ((this.jobName == null) ? 0 : this.jobName.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ProjectAndJob (");

        sb.append(projectAndJobId);
        sb.append(", ").append(requiredNumber);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(projectCode);
        sb.append(", ").append(jobName);

        sb.append(")");
        return sb.toString();
    }
}
