/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.generated.tables.records;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import com.example.jooq.generated.enums.AiFeedbackFeedbackType;
import com.example.jooq.generated.tables.AiFeedback;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AiFeedbackRecord extends UpdatableRecordImpl<AiFeedbackRecord>
    implements Record5<Long, AiFeedbackFeedbackType, String, String, LocalDateTime> {

  private static final long serialVersionUID = 1L;

  /** Setter for <code>sion.ai_feedback.ai_feedback_id</code>. */
  public void setAiFeedbackId(Long value) {
    set(0, value);
  }

  /** Getter for <code>sion.ai_feedback.ai_feedback_id</code>. */
  public Long getAiFeedbackId() {
    return (Long) get(0);
  }

  /** Setter for <code>sion.ai_feedback.feedback_type</code>. */
  public void setFeedbackType(AiFeedbackFeedbackType value) {
    set(1, value);
  }

  /** Getter for <code>sion.ai_feedback.feedback_type</code>. */
  public AiFeedbackFeedbackType getFeedbackType() {
    return (AiFeedbackFeedbackType) get(1);
  }

  /** Setter for <code>sion.ai_feedback.target_id</code>. */
  public void setTargetId(String value) {
    set(2, value);
  }

  /** Getter for <code>sion.ai_feedback.target_id</code>. */
  public String getTargetId() {
    return (String) get(2);
  }

  /** Setter for <code>sion.ai_feedback.feedback_text</code>. */
  public void setFeedbackText(String value) {
    set(3, value);
  }

  /** Getter for <code>sion.ai_feedback.feedback_text</code>. */
  public String getFeedbackText() {
    return (String) get(3);
  }

  /** Setter for <code>sion.ai_feedback.created_at</code>. */
  public void setCreatedAt(LocalDateTime value) {
    set(4, value);
  }

  /** Getter for <code>sion.ai_feedback.created_at</code>. */
  public LocalDateTime getCreatedAt() {
    return (LocalDateTime) get(4);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<Long> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record5 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row5<Long, AiFeedbackFeedbackType, String, String, LocalDateTime> fieldsRow() {
    return (Row5) super.fieldsRow();
  }

  @Override
  public Row5<Long, AiFeedbackFeedbackType, String, String, LocalDateTime> valuesRow() {
    return (Row5) super.valuesRow();
  }

  @Override
  public Field<Long> field1() {
    return AiFeedback.AI_FEEDBACK.AI_FEEDBACK_ID;
  }

  @Override
  public Field<AiFeedbackFeedbackType> field2() {
    return AiFeedback.AI_FEEDBACK.FEEDBACK_TYPE;
  }

  @Override
  public Field<String> field3() {
    return AiFeedback.AI_FEEDBACK.TARGET_ID;
  }

  @Override
  public Field<String> field4() {
    return AiFeedback.AI_FEEDBACK.FEEDBACK_TEXT;
  }

  @Override
  public Field<LocalDateTime> field5() {
    return AiFeedback.AI_FEEDBACK.CREATED_AT;
  }

  @Override
  public Long component1() {
    return getAiFeedbackId();
  }

  @Override
  public AiFeedbackFeedbackType component2() {
    return getFeedbackType();
  }

  @Override
  public String component3() {
    return getTargetId();
  }

  @Override
  public String component4() {
    return getFeedbackText();
  }

  @Override
  public LocalDateTime component5() {
    return getCreatedAt();
  }

  @Override
  public Long value1() {
    return getAiFeedbackId();
  }

  @Override
  public AiFeedbackFeedbackType value2() {
    return getFeedbackType();
  }

  @Override
  public String value3() {
    return getTargetId();
  }

  @Override
  public String value4() {
    return getFeedbackText();
  }

  @Override
  public LocalDateTime value5() {
    return getCreatedAt();
  }

  @Override
  public AiFeedbackRecord value1(Long value) {
    setAiFeedbackId(value);
    return this;
  }

  @Override
  public AiFeedbackRecord value2(AiFeedbackFeedbackType value) {
    setFeedbackType(value);
    return this;
  }

  @Override
  public AiFeedbackRecord value3(String value) {
    setTargetId(value);
    return this;
  }

  @Override
  public AiFeedbackRecord value4(String value) {
    setFeedbackText(value);
    return this;
  }

  @Override
  public AiFeedbackRecord value5(LocalDateTime value) {
    setCreatedAt(value);
    return this;
  }

  @Override
  public AiFeedbackRecord values(
      Long value1,
      AiFeedbackFeedbackType value2,
      String value3,
      String value4,
      LocalDateTime value5) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    value5(value5);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /** Create a detached AiFeedbackRecord */
  public AiFeedbackRecord() {
    super(AiFeedback.AI_FEEDBACK);
  }

  /** Create a detached, initialised AiFeedbackRecord */
  public AiFeedbackRecord(
      Long aiFeedbackId,
      AiFeedbackFeedbackType feedbackType,
      String targetId,
      String feedbackText,
      LocalDateTime createdAt) {
    super(AiFeedback.AI_FEEDBACK);

    setAiFeedbackId(aiFeedbackId);
    setFeedbackType(feedbackType);
    setTargetId(targetId);
    setFeedbackText(feedbackText);
    setCreatedAt(createdAt);
    resetChangedOnNotNull();
  }

  /** Create a detached, initialised AiFeedbackRecord */
  public AiFeedbackRecord(com.example.jooq.generated.tables.pojos.AiFeedback value) {
    super(AiFeedback.AI_FEEDBACK);

    if (value != null) {
      setAiFeedbackId(value.getAiFeedbackId());
      setFeedbackType(value.getFeedbackType());
      setTargetId(value.getTargetId());
      setFeedbackText(value.getFeedbackText());
      setCreatedAt(value.getCreatedAt());
      resetChangedOnNotNull();
    }
  }
}
