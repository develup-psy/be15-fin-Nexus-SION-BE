/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.generated.tables.records;


import com.example.jooq.generated.tables.Certificate;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CertificateRecord extends UpdatableRecordImpl<CertificateRecord> implements Record6<String, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sion.certificate.certificate_name</code>.
     */
    public void setCertificateName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>sion.certificate.certificate_name</code>.
     */
    public String getCertificateName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>sion.certificate.issuing_organization_id</code>.
     */
    public void setIssuingOrganizationId(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>sion.certificate.issuing_organization_id</code>.
     */
    public LocalDateTime getIssuingOrganizationId() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>sion.certificate.issue_date</code>.
     */
    public void setIssueDate(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>sion.certificate.issue_date</code>.
     */
    public LocalDateTime getIssueDate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>sion.certificate.expiry_date</code>.
     */
    public void setExpiryDate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>sion.certificate.expiry_date</code>.
     */
    public LocalDateTime getExpiryDate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>sion.certificate.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>sion.certificate.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>sion.certificate.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>sion.certificate.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Certificate.CERTIFICATE.CERTIFICATE_NAME;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Certificate.CERTIFICATE.ISSUING_ORGANIZATION_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Certificate.CERTIFICATE.ISSUE_DATE;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Certificate.CERTIFICATE.EXPIRY_DATE;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Certificate.CERTIFICATE.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Certificate.CERTIFICATE.UPDATED_AT;
    }

    @Override
    public String component1() {
        return getCertificateName();
    }

    @Override
    public LocalDateTime component2() {
        return getIssuingOrganizationId();
    }

    @Override
    public LocalDateTime component3() {
        return getIssueDate();
    }

    @Override
    public LocalDateTime component4() {
        return getExpiryDate();
    }

    @Override
    public LocalDateTime component5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component6() {
        return getUpdatedAt();
    }

    @Override
    public String value1() {
        return getCertificateName();
    }

    @Override
    public LocalDateTime value2() {
        return getIssuingOrganizationId();
    }

    @Override
    public LocalDateTime value3() {
        return getIssueDate();
    }

    @Override
    public LocalDateTime value4() {
        return getExpiryDate();
    }

    @Override
    public LocalDateTime value5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value6() {
        return getUpdatedAt();
    }

    @Override
    public CertificateRecord value1(String value) {
        setCertificateName(value);
        return this;
    }

    @Override
    public CertificateRecord value2(LocalDateTime value) {
        setIssuingOrganizationId(value);
        return this;
    }

    @Override
    public CertificateRecord value3(LocalDateTime value) {
        setIssueDate(value);
        return this;
    }

    @Override
    public CertificateRecord value4(LocalDateTime value) {
        setExpiryDate(value);
        return this;
    }

    @Override
    public CertificateRecord value5(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public CertificateRecord value6(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public CertificateRecord values(String value1, LocalDateTime value2, LocalDateTime value3, LocalDateTime value4, LocalDateTime value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CertificateRecord
     */
    public CertificateRecord() {
        super(Certificate.CERTIFICATE);
    }

    /**
     * Create a detached, initialised CertificateRecord
     */
    public CertificateRecord(String certificateName, LocalDateTime issuingOrganizationId, LocalDateTime issueDate, LocalDateTime expiryDate, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Certificate.CERTIFICATE);

        setCertificateName(certificateName);
        setIssuingOrganizationId(issuingOrganizationId);
        setIssueDate(issueDate);
        setExpiryDate(expiryDate);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CertificateRecord
     */
    public CertificateRecord(com.example.jooq.generated.tables.pojos.Certificate value) {
        super(Certificate.CERTIFICATE);

        if (value != null) {
            setCertificateName(value.getCertificateName());
            setIssuingOrganizationId(value.getIssuingOrganizationId());
            setIssueDate(value.getIssueDate());
            setExpiryDate(value.getExpiryDate());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
