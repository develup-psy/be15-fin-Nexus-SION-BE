/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.generated.tables.daos;


import com.example.jooq.generated.tables.ProjectAndJob;
import com.example.jooq.generated.tables.records.ProjectAndJobRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectAndJobDao extends DAOImpl<ProjectAndJobRecord, com.example.jooq.generated.tables.pojos.ProjectAndJob, Long> {

    /**
     * Create a new ProjectAndJobDao without any configuration
     */
    public ProjectAndJobDao() {
        super(ProjectAndJob.PROJECT_AND_JOB, com.example.jooq.generated.tables.pojos.ProjectAndJob.class);
    }

    /**
     * Create a new ProjectAndJobDao with an attached configuration
     */
    public ProjectAndJobDao(Configuration configuration) {
        super(ProjectAndJob.PROJECT_AND_JOB, com.example.jooq.generated.tables.pojos.ProjectAndJob.class, configuration);
    }

    @Override
    public Long getId(com.example.jooq.generated.tables.pojos.ProjectAndJob object) {
        return object.getProjectAndJobId();
    }

    /**
     * Fetch records that have <code>project_and_job_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.ProjectAndJob> fetchRangeOfProjectAndJobId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ProjectAndJob.PROJECT_AND_JOB.PROJECT_AND_JOB_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>project_and_job_id IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.ProjectAndJob> fetchByProjectAndJobId(Long... values) {
        return fetch(ProjectAndJob.PROJECT_AND_JOB.PROJECT_AND_JOB_ID, values);
    }

    /**
     * Fetch a unique record that has <code>project_and_job_id = value</code>
     */
    public com.example.jooq.generated.tables.pojos.ProjectAndJob fetchOneByProjectAndJobId(Long value) {
        return fetchOne(ProjectAndJob.PROJECT_AND_JOB.PROJECT_AND_JOB_ID, value);
    }

    /**
     * Fetch a unique record that has <code>project_and_job_id = value</code>
     */
    public Optional<com.example.jooq.generated.tables.pojos.ProjectAndJob> fetchOptionalByProjectAndJobId(Long value) {
        return fetchOptional(ProjectAndJob.PROJECT_AND_JOB.PROJECT_AND_JOB_ID, value);
    }

    /**
     * Fetch records that have <code>required_number BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.ProjectAndJob> fetchRangeOfRequiredNumber(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ProjectAndJob.PROJECT_AND_JOB.REQUIRED_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>required_number IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.ProjectAndJob> fetchByRequiredNumber(Integer... values) {
        return fetch(ProjectAndJob.PROJECT_AND_JOB.REQUIRED_NUMBER, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.ProjectAndJob> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ProjectAndJob.PROJECT_AND_JOB.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.ProjectAndJob> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(ProjectAndJob.PROJECT_AND_JOB.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.ProjectAndJob> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ProjectAndJob.PROJECT_AND_JOB.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.ProjectAndJob> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(ProjectAndJob.PROJECT_AND_JOB.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>project_code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.ProjectAndJob> fetchRangeOfProjectCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(ProjectAndJob.PROJECT_AND_JOB.PROJECT_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>project_code IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.ProjectAndJob> fetchByProjectCode(String... values) {
        return fetch(ProjectAndJob.PROJECT_AND_JOB.PROJECT_CODE, values);
    }

    /**
     * Fetch records that have <code>job_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.ProjectAndJob> fetchRangeOfJobName(String lowerInclusive, String upperInclusive) {
        return fetchRange(ProjectAndJob.PROJECT_AND_JOB.JOB_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>job_name IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.ProjectAndJob> fetchByJobName(String... values) {
        return fetch(ProjectAndJob.PROJECT_AND_JOB.JOB_NAME, values);
    }
}
