/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.generated.tables.pojos;

import java.io.Serializable;
import java.time.LocalDateTime;

import com.example.jooq.generated.enums.UserCertificateHistoryCertificateStatus;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class UserCertificateHistory implements Serializable {

  private static final long serialVersionUID = 1L;

  private Long userCertificateHistoryId;
  private LocalDateTime issueDate;
  private String pdfFileUrl;
  private UserCertificateHistoryCertificateStatus certificateStatus;
  private String rejectedReason;
  private LocalDateTime createdAt;
  private LocalDateTime updatedAt;
  private String employeeIdentificationNumber;
  private String certificateName;

  public UserCertificateHistory() {}

  public UserCertificateHistory(UserCertificateHistory value) {
    this.userCertificateHistoryId = value.userCertificateHistoryId;
    this.issueDate = value.issueDate;
    this.pdfFileUrl = value.pdfFileUrl;
    this.certificateStatus = value.certificateStatus;
    this.rejectedReason = value.rejectedReason;
    this.createdAt = value.createdAt;
    this.updatedAt = value.updatedAt;
    this.employeeIdentificationNumber = value.employeeIdentificationNumber;
    this.certificateName = value.certificateName;
  }

  public UserCertificateHistory(
      Long userCertificateHistoryId,
      LocalDateTime issueDate,
      String pdfFileUrl,
      UserCertificateHistoryCertificateStatus certificateStatus,
      String rejectedReason,
      LocalDateTime createdAt,
      LocalDateTime updatedAt,
      String employeeIdentificationNumber,
      String certificateName) {
    this.userCertificateHistoryId = userCertificateHistoryId;
    this.issueDate = issueDate;
    this.pdfFileUrl = pdfFileUrl;
    this.certificateStatus = certificateStatus;
    this.rejectedReason = rejectedReason;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.employeeIdentificationNumber = employeeIdentificationNumber;
    this.certificateName = certificateName;
  }

  /** Getter for <code>SION.user_certificate_history.user_certificate_history_id</code>. */
  public Long getUserCertificateHistoryId() {
    return this.userCertificateHistoryId;
  }

  /** Setter for <code>SION.user_certificate_history.user_certificate_history_id</code>. */
  public void setUserCertificateHistoryId(Long userCertificateHistoryId) {
    this.userCertificateHistoryId = userCertificateHistoryId;
  }

  /** Getter for <code>SION.user_certificate_history.issue_date</code>. */
  public LocalDateTime getIssueDate() {
    return this.issueDate;
  }

  /** Setter for <code>SION.user_certificate_history.issue_date</code>. */
  public void setIssueDate(LocalDateTime issueDate) {
    this.issueDate = issueDate;
  }

  /** Getter for <code>SION.user_certificate_history.pdf_file_url</code>. */
  public String getPdfFileUrl() {
    return this.pdfFileUrl;
  }

  /** Setter for <code>SION.user_certificate_history.pdf_file_url</code>. */
  public void setPdfFileUrl(String pdfFileUrl) {
    this.pdfFileUrl = pdfFileUrl;
  }

  /** Getter for <code>SION.user_certificate_history.certificate_status</code>. */
  public UserCertificateHistoryCertificateStatus getCertificateStatus() {
    return this.certificateStatus;
  }

  /** Setter for <code>SION.user_certificate_history.certificate_status</code>. */
  public void setCertificateStatus(UserCertificateHistoryCertificateStatus certificateStatus) {
    this.certificateStatus = certificateStatus;
  }

  /** Getter for <code>SION.user_certificate_history.rejected_reason</code>. */
  public String getRejectedReason() {
    return this.rejectedReason;
  }

  /** Setter for <code>SION.user_certificate_history.rejected_reason</code>. */
  public void setRejectedReason(String rejectedReason) {
    this.rejectedReason = rejectedReason;
  }

  /** Getter for <code>SION.user_certificate_history.created_at</code>. */
  public LocalDateTime getCreatedAt() {
    return this.createdAt;
  }

  /** Setter for <code>SION.user_certificate_history.created_at</code>. */
  public void setCreatedAt(LocalDateTime createdAt) {
    this.createdAt = createdAt;
  }

  /** Getter for <code>SION.user_certificate_history.updated_at</code>. */
  public LocalDateTime getUpdatedAt() {
    return this.updatedAt;
  }

  /** Setter for <code>SION.user_certificate_history.updated_at</code>. */
  public void setUpdatedAt(LocalDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  /** Getter for <code>SION.user_certificate_history.employee_identification_number</code>. */
  public String getEmployeeIdentificationNumber() {
    return this.employeeIdentificationNumber;
  }

  /** Setter for <code>SION.user_certificate_history.employee_identification_number</code>. */
  public void setEmployeeIdentificationNumber(String employeeIdentificationNumber) {
    this.employeeIdentificationNumber = employeeIdentificationNumber;
  }

  /** Getter for <code>SION.user_certificate_history.certificate_name</code>. */
  public String getCertificateName() {
    return this.certificateName;
  }

  /** Setter for <code>SION.user_certificate_history.certificate_name</code>. */
  public void setCertificateName(String certificateName) {
    this.certificateName = certificateName;
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj) return true;
    if (obj == null) return false;
    if (getClass() != obj.getClass()) return false;
    final UserCertificateHistory other = (UserCertificateHistory) obj;
    if (this.userCertificateHistoryId == null) {
      if (other.userCertificateHistoryId != null) return false;
    } else if (!this.userCertificateHistoryId.equals(other.userCertificateHistoryId)) return false;
    if (this.issueDate == null) {
      if (other.issueDate != null) return false;
    } else if (!this.issueDate.equals(other.issueDate)) return false;
    if (this.pdfFileUrl == null) {
      if (other.pdfFileUrl != null) return false;
    } else if (!this.pdfFileUrl.equals(other.pdfFileUrl)) return false;
    if (this.certificateStatus == null) {
      if (other.certificateStatus != null) return false;
    } else if (!this.certificateStatus.equals(other.certificateStatus)) return false;
    if (this.rejectedReason == null) {
      if (other.rejectedReason != null) return false;
    } else if (!this.rejectedReason.equals(other.rejectedReason)) return false;
    if (this.createdAt == null) {
      if (other.createdAt != null) return false;
    } else if (!this.createdAt.equals(other.createdAt)) return false;
    if (this.updatedAt == null) {
      if (other.updatedAt != null) return false;
    } else if (!this.updatedAt.equals(other.updatedAt)) return false;
    if (this.employeeIdentificationNumber == null) {
      if (other.employeeIdentificationNumber != null) return false;
    } else if (!this.employeeIdentificationNumber.equals(other.employeeIdentificationNumber))
      return false;
    if (this.certificateName == null) {
      if (other.certificateName != null) return false;
    } else if (!this.certificateName.equals(other.certificateName)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result =
        prime * result
            + ((this.userCertificateHistoryId == null)
                ? 0
                : this.userCertificateHistoryId.hashCode());
    result = prime * result + ((this.issueDate == null) ? 0 : this.issueDate.hashCode());
    result = prime * result + ((this.pdfFileUrl == null) ? 0 : this.pdfFileUrl.hashCode());
    result =
        prime * result + ((this.certificateStatus == null) ? 0 : this.certificateStatus.hashCode());
    result = prime * result + ((this.rejectedReason == null) ? 0 : this.rejectedReason.hashCode());
    result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
    result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
    result =
        prime * result
            + ((this.employeeIdentificationNumber == null)
                ? 0
                : this.employeeIdentificationNumber.hashCode());
    result =
        prime * result + ((this.certificateName == null) ? 0 : this.certificateName.hashCode());
    return result;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("UserCertificateHistory (");

    sb.append(userCertificateHistoryId);
    sb.append(", ").append(issueDate);
    sb.append(", ").append(pdfFileUrl);
    sb.append(", ").append(certificateStatus);
    sb.append(", ").append(rejectedReason);
    sb.append(", ").append(createdAt);
    sb.append(", ").append(updatedAt);
    sb.append(", ").append(employeeIdentificationNumber);
    sb.append(", ").append(certificateName);

    sb.append(")");
    return sb.toString();
  }
}
