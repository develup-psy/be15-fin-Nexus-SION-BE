/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.generated.tables.records;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

import com.example.jooq.generated.enums.UserCertificateHistoryCertificateStatus;
import com.example.jooq.generated.tables.UserCertificateHistory;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class UserCertificateHistoryRecord extends UpdatableRecordImpl<UserCertificateHistoryRecord>
    implements Record9<
        Long,
        LocalDateTime,
        String,
        UserCertificateHistoryCertificateStatus,
        String,
        LocalDateTime,
        LocalDateTime,
        String,
        String> {

  private static final long serialVersionUID = 1L;

  /** Setter for <code>SION.user_certificate_history.user_certificate_history_id</code>. */
  public void setUserCertificateHistoryId(Long value) {
    set(0, value);
  }

  /** Getter for <code>SION.user_certificate_history.user_certificate_history_id</code>. */
  public Long getUserCertificateHistoryId() {
    return (Long) get(0);
  }

  /** Setter for <code>SION.user_certificate_history.issue_date</code>. */
  public void setIssueDate(LocalDateTime value) {
    set(1, value);
  }

  /** Getter for <code>SION.user_certificate_history.issue_date</code>. */
  public LocalDateTime getIssueDate() {
    return (LocalDateTime) get(1);
  }

  /** Setter for <code>SION.user_certificate_history.pdf_file_url</code>. */
  public void setPdfFileUrl(String value) {
    set(2, value);
  }

  /** Getter for <code>SION.user_certificate_history.pdf_file_url</code>. */
  public String getPdfFileUrl() {
    return (String) get(2);
  }

  /** Setter for <code>SION.user_certificate_history.certificate_status</code>. */
  public void setCertificateStatus(UserCertificateHistoryCertificateStatus value) {
    set(3, value);
  }

  /** Getter for <code>SION.user_certificate_history.certificate_status</code>. */
  public UserCertificateHistoryCertificateStatus getCertificateStatus() {
    return (UserCertificateHistoryCertificateStatus) get(3);
  }

  /** Setter for <code>SION.user_certificate_history.rejected_reason</code>. */
  public void setRejectedReason(String value) {
    set(4, value);
  }

  /** Getter for <code>SION.user_certificate_history.rejected_reason</code>. */
  public String getRejectedReason() {
    return (String) get(4);
  }

  /** Setter for <code>SION.user_certificate_history.created_at</code>. */
  public void setCreatedAt(LocalDateTime value) {
    set(5, value);
  }

  /** Getter for <code>SION.user_certificate_history.created_at</code>. */
  public LocalDateTime getCreatedAt() {
    return (LocalDateTime) get(5);
  }

  /** Setter for <code>SION.user_certificate_history.updated_at</code>. */
  public void setUpdatedAt(LocalDateTime value) {
    set(6, value);
  }

  /** Getter for <code>SION.user_certificate_history.updated_at</code>. */
  public LocalDateTime getUpdatedAt() {
    return (LocalDateTime) get(6);
  }

  /** Setter for <code>SION.user_certificate_history.employee_identification_number</code>. */
  public void setEmployeeIdentificationNumber(String value) {
    set(7, value);
  }

  /** Getter for <code>SION.user_certificate_history.employee_identification_number</code>. */
  public String getEmployeeIdentificationNumber() {
    return (String) get(7);
  }

  /** Setter for <code>SION.user_certificate_history.certificate_name</code>. */
  public void setCertificateName(String value) {
    set(8, value);
  }

  /** Getter for <code>SION.user_certificate_history.certificate_name</code>. */
  public String getCertificateName() {
    return (String) get(8);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<Long> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record9 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row9<
          Long,
          LocalDateTime,
          String,
          UserCertificateHistoryCertificateStatus,
          String,
          LocalDateTime,
          LocalDateTime,
          String,
          String>
      fieldsRow() {
    return (Row9) super.fieldsRow();
  }

  @Override
  public Row9<
          Long,
          LocalDateTime,
          String,
          UserCertificateHistoryCertificateStatus,
          String,
          LocalDateTime,
          LocalDateTime,
          String,
          String>
      valuesRow() {
    return (Row9) super.valuesRow();
  }

  @Override
  public Field<Long> field1() {
    return UserCertificateHistory.USER_CERTIFICATE_HISTORY.USER_CERTIFICATE_HISTORY_ID;
  }

  @Override
  public Field<LocalDateTime> field2() {
    return UserCertificateHistory.USER_CERTIFICATE_HISTORY.ISSUE_DATE;
  }

  @Override
  public Field<String> field3() {
    return UserCertificateHistory.USER_CERTIFICATE_HISTORY.PDF_FILE_URL;
  }

  @Override
  public Field<UserCertificateHistoryCertificateStatus> field4() {
    return UserCertificateHistory.USER_CERTIFICATE_HISTORY.CERTIFICATE_STATUS;
  }

  @Override
  public Field<String> field5() {
    return UserCertificateHistory.USER_CERTIFICATE_HISTORY.REJECTED_REASON;
  }

  @Override
  public Field<LocalDateTime> field6() {
    return UserCertificateHistory.USER_CERTIFICATE_HISTORY.CREATED_AT;
  }

  @Override
  public Field<LocalDateTime> field7() {
    return UserCertificateHistory.USER_CERTIFICATE_HISTORY.UPDATED_AT;
  }

  @Override
  public Field<String> field8() {
    return UserCertificateHistory.USER_CERTIFICATE_HISTORY.EMPLOYEE_IDENTIFICATION_NUMBER;
  }

  @Override
  public Field<String> field9() {
    return UserCertificateHistory.USER_CERTIFICATE_HISTORY.CERTIFICATE_NAME;
  }

  @Override
  public Long component1() {
    return getUserCertificateHistoryId();
  }

  @Override
  public LocalDateTime component2() {
    return getIssueDate();
  }

  @Override
  public String component3() {
    return getPdfFileUrl();
  }

  @Override
  public UserCertificateHistoryCertificateStatus component4() {
    return getCertificateStatus();
  }

  @Override
  public String component5() {
    return getRejectedReason();
  }

  @Override
  public LocalDateTime component6() {
    return getCreatedAt();
  }

  @Override
  public LocalDateTime component7() {
    return getUpdatedAt();
  }

  @Override
  public String component8() {
    return getEmployeeIdentificationNumber();
  }

  @Override
  public String component9() {
    return getCertificateName();
  }

  @Override
  public Long value1() {
    return getUserCertificateHistoryId();
  }

  @Override
  public LocalDateTime value2() {
    return getIssueDate();
  }

  @Override
  public String value3() {
    return getPdfFileUrl();
  }

  @Override
  public UserCertificateHistoryCertificateStatus value4() {
    return getCertificateStatus();
  }

  @Override
  public String value5() {
    return getRejectedReason();
  }

  @Override
  public LocalDateTime value6() {
    return getCreatedAt();
  }

  @Override
  public LocalDateTime value7() {
    return getUpdatedAt();
  }

  @Override
  public String value8() {
    return getEmployeeIdentificationNumber();
  }

  @Override
  public String value9() {
    return getCertificateName();
  }

  @Override
  public UserCertificateHistoryRecord value1(Long value) {
    setUserCertificateHistoryId(value);
    return this;
  }

  @Override
  public UserCertificateHistoryRecord value2(LocalDateTime value) {
    setIssueDate(value);
    return this;
  }

  @Override
  public UserCertificateHistoryRecord value3(String value) {
    setPdfFileUrl(value);
    return this;
  }

  @Override
  public UserCertificateHistoryRecord value4(UserCertificateHistoryCertificateStatus value) {
    setCertificateStatus(value);
    return this;
  }

  @Override
  public UserCertificateHistoryRecord value5(String value) {
    setRejectedReason(value);
    return this;
  }

  @Override
  public UserCertificateHistoryRecord value6(LocalDateTime value) {
    setCreatedAt(value);
    return this;
  }

  @Override
  public UserCertificateHistoryRecord value7(LocalDateTime value) {
    setUpdatedAt(value);
    return this;
  }

  @Override
  public UserCertificateHistoryRecord value8(String value) {
    setEmployeeIdentificationNumber(value);
    return this;
  }

  @Override
  public UserCertificateHistoryRecord value9(String value) {
    setCertificateName(value);
    return this;
  }

  @Override
  public UserCertificateHistoryRecord values(
      Long value1,
      LocalDateTime value2,
      String value3,
      UserCertificateHistoryCertificateStatus value4,
      String value5,
      LocalDateTime value6,
      LocalDateTime value7,
      String value8,
      String value9) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    value5(value5);
    value6(value6);
    value7(value7);
    value8(value8);
    value9(value9);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /** Create a detached UserCertificateHistoryRecord */
  public UserCertificateHistoryRecord() {
    super(UserCertificateHistory.USER_CERTIFICATE_HISTORY);
  }

  /** Create a detached, initialised UserCertificateHistoryRecord */
  public UserCertificateHistoryRecord(
      Long userCertificateHistoryId,
      LocalDateTime issueDate,
      String pdfFileUrl,
      UserCertificateHistoryCertificateStatus certificateStatus,
      String rejectedReason,
      LocalDateTime createdAt,
      LocalDateTime updatedAt,
      String employeeIdentificationNumber,
      String certificateName) {
    super(UserCertificateHistory.USER_CERTIFICATE_HISTORY);

    setUserCertificateHistoryId(userCertificateHistoryId);
    setIssueDate(issueDate);
    setPdfFileUrl(pdfFileUrl);
    setCertificateStatus(certificateStatus);
    setRejectedReason(rejectedReason);
    setCreatedAt(createdAt);
    setUpdatedAt(updatedAt);
    setEmployeeIdentificationNumber(employeeIdentificationNumber);
    setCertificateName(certificateName);
    resetChangedOnNotNull();
  }

  /** Create a detached, initialised UserCertificateHistoryRecord */
  public UserCertificateHistoryRecord(
      com.example.jooq.generated.tables.pojos.UserCertificateHistory value) {
    super(UserCertificateHistory.USER_CERTIFICATE_HISTORY);

    if (value != null) {
      setUserCertificateHistoryId(value.getUserCertificateHistoryId());
      setIssueDate(value.getIssueDate());
      setPdfFileUrl(value.getPdfFileUrl());
      setCertificateStatus(value.getCertificateStatus());
      setRejectedReason(value.getRejectedReason());
      setCreatedAt(value.getCreatedAt());
      setUpdatedAt(value.getUpdatedAt());
      setEmployeeIdentificationNumber(value.getEmployeeIdentificationNumber());
      setCertificateName(value.getCertificateName());
      resetChangedOnNotNull();
    }
  }
}
