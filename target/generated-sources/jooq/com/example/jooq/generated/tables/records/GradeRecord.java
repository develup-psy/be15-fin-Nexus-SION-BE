/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.generated.tables.records;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import com.example.jooq.generated.enums.GradeGradeCode;
import com.example.jooq.generated.tables.Grade;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class GradeRecord extends UpdatableRecordImpl<GradeRecord>
    implements Record7<
        GradeGradeCode, BigDecimal, BigDecimal, Integer, Integer, LocalDateTime, LocalDateTime> {

  private static final long serialVersionUID = 1L;

  /** Setter for <code>sion.grade.grade_code</code>. */
  public void setGradeCode(GradeGradeCode value) {
    set(0, value);
  }

  /** Getter for <code>sion.grade.grade_code</code>. */
  public GradeGradeCode getGradeCode() {
    return (GradeGradeCode) get(0);
  }

  /** Setter for <code>sion.grade.ratio</code>. */
  public void setRatio(BigDecimal value) {
    set(1, value);
  }

  /** Getter for <code>sion.grade.ratio</code>. */
  public BigDecimal getRatio() {
    return (BigDecimal) get(1);
  }

  /** Setter for <code>sion.grade.productivity</code>. */
  public void setProductivity(BigDecimal value) {
    set(2, value);
  }

  /** Getter for <code>sion.grade.productivity</code>. */
  public BigDecimal getProductivity() {
    return (BigDecimal) get(2);
  }

  /** Setter for <code>sion.grade.score_threshold</code>. */
  public void setScoreThreshold(Integer value) {
    set(3, value);
  }

  /** Getter for <code>sion.grade.score_threshold</code>. */
  public Integer getScoreThreshold() {
    return (Integer) get(3);
  }

  /** Setter for <code>sion.grade.monthly_unit_price</code>. */
  public void setMonthlyUnitPrice(Integer value) {
    set(4, value);
  }

  /** Getter for <code>sion.grade.monthly_unit_price</code>. */
  public Integer getMonthlyUnitPrice() {
    return (Integer) get(4);
  }

  /** Setter for <code>sion.grade.created_at</code>. */
  public void setCreatedAt(LocalDateTime value) {
    set(5, value);
  }

  /** Getter for <code>sion.grade.created_at</code>. */
  public LocalDateTime getCreatedAt() {
    return (LocalDateTime) get(5);
  }

  /** Setter for <code>sion.grade.updated_at</code>. */
  public void setUpdatedAt(LocalDateTime value) {
    set(6, value);
  }

  /** Getter for <code>sion.grade.updated_at</code>. */
  public LocalDateTime getUpdatedAt() {
    return (LocalDateTime) get(6);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<GradeGradeCode> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record7 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row7<
          GradeGradeCode, BigDecimal, BigDecimal, Integer, Integer, LocalDateTime, LocalDateTime>
      fieldsRow() {
    return (Row7) super.fieldsRow();
  }

  @Override
  public Row7<
          GradeGradeCode, BigDecimal, BigDecimal, Integer, Integer, LocalDateTime, LocalDateTime>
      valuesRow() {
    return (Row7) super.valuesRow();
  }

  @Override
  public Field<GradeGradeCode> field1() {
    return Grade.GRADE.GRADE_CODE;
  }

  @Override
  public Field<BigDecimal> field2() {
    return Grade.GRADE.RATIO;
  }

  @Override
  public Field<BigDecimal> field3() {
    return Grade.GRADE.PRODUCTIVITY;
  }

  @Override
  public Field<Integer> field4() {
    return Grade.GRADE.SCORE_THRESHOLD;
  }

  @Override
  public Field<Integer> field5() {
    return Grade.GRADE.MONTHLY_UNIT_PRICE;
  }

  @Override
  public Field<LocalDateTime> field6() {
    return Grade.GRADE.CREATED_AT;
  }

  @Override
  public Field<LocalDateTime> field7() {
    return Grade.GRADE.UPDATED_AT;
  }

  @Override
  public GradeGradeCode component1() {
    return getGradeCode();
  }

  @Override
  public BigDecimal component2() {
    return getRatio();
  }

  @Override
  public BigDecimal component3() {
    return getProductivity();
  }

  @Override
  public Integer component4() {
    return getScoreThreshold();
  }

  @Override
  public Integer component5() {
    return getMonthlyUnitPrice();
  }

  @Override
  public LocalDateTime component6() {
    return getCreatedAt();
  }

  @Override
  public LocalDateTime component7() {
    return getUpdatedAt();
  }

  @Override
  public GradeGradeCode value1() {
    return getGradeCode();
  }

  @Override
  public BigDecimal value2() {
    return getRatio();
  }

  @Override
  public BigDecimal value3() {
    return getProductivity();
  }

  @Override
  public Integer value4() {
    return getScoreThreshold();
  }

  @Override
  public Integer value5() {
    return getMonthlyUnitPrice();
  }

  @Override
  public LocalDateTime value6() {
    return getCreatedAt();
  }

  @Override
  public LocalDateTime value7() {
    return getUpdatedAt();
  }

  @Override
  public GradeRecord value1(GradeGradeCode value) {
    setGradeCode(value);
    return this;
  }

  @Override
  public GradeRecord value2(BigDecimal value) {
    setRatio(value);
    return this;
  }

  @Override
  public GradeRecord value3(BigDecimal value) {
    setProductivity(value);
    return this;
  }

  @Override
  public GradeRecord value4(Integer value) {
    setScoreThreshold(value);
    return this;
  }

  @Override
  public GradeRecord value5(Integer value) {
    setMonthlyUnitPrice(value);
    return this;
  }

  @Override
  public GradeRecord value6(LocalDateTime value) {
    setCreatedAt(value);
    return this;
  }

  @Override
  public GradeRecord value7(LocalDateTime value) {
    setUpdatedAt(value);
    return this;
  }

  @Override
  public GradeRecord values(
      GradeGradeCode value1,
      BigDecimal value2,
      BigDecimal value3,
      Integer value4,
      Integer value5,
      LocalDateTime value6,
      LocalDateTime value7) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    value5(value5);
    value6(value6);
    value7(value7);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /** Create a detached GradeRecord */
  public GradeRecord() {
    super(Grade.GRADE);
  }

  /** Create a detached, initialised GradeRecord */
  public GradeRecord(
      GradeGradeCode gradeCode,
      BigDecimal ratio,
      BigDecimal productivity,
      Integer scoreThreshold,
      Integer monthlyUnitPrice,
      LocalDateTime createdAt,
      LocalDateTime updatedAt) {
    super(Grade.GRADE);

    setGradeCode(gradeCode);
    setRatio(ratio);
    setProductivity(productivity);
    setScoreThreshold(scoreThreshold);
    setMonthlyUnitPrice(monthlyUnitPrice);
    setCreatedAt(createdAt);
    setUpdatedAt(updatedAt);
    resetChangedOnNotNull();
  }

  /** Create a detached, initialised GradeRecord */
  public GradeRecord(com.example.jooq.generated.tables.pojos.Grade value) {
    super(Grade.GRADE);

    if (value != null) {
      setGradeCode(value.getGradeCode());
      setRatio(value.getRatio());
      setProductivity(value.getProductivity());
      setScoreThreshold(value.getScoreThreshold());
      setMonthlyUnitPrice(value.getMonthlyUnitPrice());
      setCreatedAt(value.getCreatedAt());
      setUpdatedAt(value.getUpdatedAt());
      resetChangedOnNotNull();
    }
  }
}
