/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.generated.tables.daos;


import com.example.jooq.generated.tables.UserTrainingHistory;
import com.example.jooq.generated.tables.records.UserTrainingHistoryRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserTrainingHistoryDao extends DAOImpl<UserTrainingHistoryRecord, com.example.jooq.generated.tables.pojos.UserTrainingHistory, Long> {

    /**
     * Create a new UserTrainingHistoryDao without any configuration
     */
    public UserTrainingHistoryDao() {
        super(UserTrainingHistory.USER_TRAINING_HISTORY, com.example.jooq.generated.tables.pojos.UserTrainingHistory.class);
    }

    /**
     * Create a new UserTrainingHistoryDao with an attached configuration
     */
    public UserTrainingHistoryDao(Configuration configuration) {
        super(UserTrainingHistory.USER_TRAINING_HISTORY, com.example.jooq.generated.tables.pojos.UserTrainingHistory.class, configuration);
    }

    @Override
    public Long getId(com.example.jooq.generated.tables.pojos.UserTrainingHistory object) {
        return object.getUserTrainigHistoryId();
    }

    /**
     * Fetch records that have <code>user_trainig_history_id BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.UserTrainingHistory> fetchRangeOfUserTrainigHistoryId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(UserTrainingHistory.USER_TRAINING_HISTORY.USER_TRAINIG_HISTORY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_trainig_history_id IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.UserTrainingHistory> fetchByUserTrainigHistoryId(Long... values) {
        return fetch(UserTrainingHistory.USER_TRAINING_HISTORY.USER_TRAINIG_HISTORY_ID, values);
    }

    /**
     * Fetch a unique record that has <code>user_trainig_history_id =
     * value</code>
     */
    public com.example.jooq.generated.tables.pojos.UserTrainingHistory fetchOneByUserTrainigHistoryId(Long value) {
        return fetchOne(UserTrainingHistory.USER_TRAINING_HISTORY.USER_TRAINIG_HISTORY_ID, value);
    }

    /**
     * Fetch a unique record that has <code>user_trainig_history_id =
     * value</code>
     */
    public Optional<com.example.jooq.generated.tables.pojos.UserTrainingHistory> fetchOptionalByUserTrainigHistoryId(Long value) {
        return fetchOptional(UserTrainingHistory.USER_TRAINING_HISTORY.USER_TRAINIG_HISTORY_ID, value);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.UserTrainingHistory> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(UserTrainingHistory.USER_TRAINING_HISTORY.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.UserTrainingHistory> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(UserTrainingHistory.USER_TRAINING_HISTORY.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.UserTrainingHistory> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(UserTrainingHistory.USER_TRAINING_HISTORY.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.UserTrainingHistory> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(UserTrainingHistory.USER_TRAINING_HISTORY.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.UserTrainingHistory> fetchRangeOfUpdatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserTrainingHistory.USER_TRAINING_HISTORY.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.UserTrainingHistory> fetchByUpdatedBy(String... values) {
        return fetch(UserTrainingHistory.USER_TRAINING_HISTORY.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>training_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.UserTrainingHistory> fetchRangeOfTrainingName(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserTrainingHistory.USER_TRAINING_HISTORY.TRAINING_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>training_name IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.UserTrainingHistory> fetchByTrainingName(String... values) {
        return fetch(UserTrainingHistory.USER_TRAINING_HISTORY.TRAINING_NAME, values);
    }

    /**
     * Fetch records that have <code>employee_identification_number BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.UserTrainingHistory> fetchRangeOfEmployeeIdentificationNumber(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserTrainingHistory.USER_TRAINING_HISTORY.EMPLOYEE_IDENTIFICATION_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>employee_identification_number IN
     * (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.UserTrainingHistory> fetchByEmployeeIdentificationNumber(String... values) {
        return fetch(UserTrainingHistory.USER_TRAINING_HISTORY.EMPLOYEE_IDENTIFICATION_NUMBER, values);
    }
}
