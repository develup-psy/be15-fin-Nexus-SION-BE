/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.generated.tables.daos;


import com.example.jooq.generated.enums.GradeGradeCode;
import com.example.jooq.generated.tables.Grade;
import com.example.jooq.generated.tables.records.GradeRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GradeDao extends DAOImpl<GradeRecord, com.example.jooq.generated.tables.pojos.Grade, GradeGradeCode> {

    /**
     * Create a new GradeDao without any configuration
     */
    public GradeDao() {
        super(Grade.GRADE, com.example.jooq.generated.tables.pojos.Grade.class);
    }

    /**
     * Create a new GradeDao with an attached configuration
     */
    public GradeDao(Configuration configuration) {
        super(Grade.GRADE, com.example.jooq.generated.tables.pojos.Grade.class, configuration);
    }

    @Override
    public GradeGradeCode getId(com.example.jooq.generated.tables.pojos.Grade object) {
        return object.getGradeCode();
    }

    /**
     * Fetch records that have <code>grade_code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Grade> fetchRangeOfGradeCode(GradeGradeCode lowerInclusive, GradeGradeCode upperInclusive) {
        return fetchRange(Grade.GRADE.GRADE_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>grade_code IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Grade> fetchByGradeCode(GradeGradeCode... values) {
        return fetch(Grade.GRADE.GRADE_CODE, values);
    }

    /**
     * Fetch a unique record that has <code>grade_code = value</code>
     */
    public com.example.jooq.generated.tables.pojos.Grade fetchOneByGradeCode(GradeGradeCode value) {
        return fetchOne(Grade.GRADE.GRADE_CODE, value);
    }

    /**
     * Fetch a unique record that has <code>grade_code = value</code>
     */
    public Optional<com.example.jooq.generated.tables.pojos.Grade> fetchOptionalByGradeCode(GradeGradeCode value) {
        return fetchOptional(Grade.GRADE.GRADE_CODE, value);
    }

    /**
     * Fetch records that have <code>min_score BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Grade> fetchRangeOfMinScore(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Grade.GRADE.MIN_SCORE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>min_score IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Grade> fetchByMinScore(Integer... values) {
        return fetch(Grade.GRADE.MIN_SCORE, values);
    }

    /**
     * Fetch records that have <code>max_score BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Grade> fetchRangeOfMaxScore(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Grade.GRADE.MAX_SCORE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>max_score IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Grade> fetchByMaxScore(Integer... values) {
        return fetch(Grade.GRADE.MAX_SCORE, values);
    }

    /**
     * Fetch records that have <code>productivity BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Grade> fetchRangeOfProductivity(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Grade.GRADE.PRODUCTIVITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>productivity IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Grade> fetchByProductivity(BigDecimal... values) {
        return fetch(Grade.GRADE.PRODUCTIVITY, values);
    }

    /**
     * Fetch records that have <code>monthly_unit_price BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Grade> fetchRangeOfMonthlyUnitPrice(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Grade.GRADE.MONTHLY_UNIT_PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>monthly_unit_price IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Grade> fetchByMonthlyUnitPrice(Integer... values) {
        return fetch(Grade.GRADE.MONTHLY_UNIT_PRICE, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Grade> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Grade.GRADE.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Grade> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Grade.GRADE.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Grade> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Grade.GRADE.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Grade> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Grade.GRADE.UPDATED_AT, values);
    }
}
