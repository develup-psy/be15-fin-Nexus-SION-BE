/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.generated.tables.daos;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import com.example.jooq.generated.tables.InitialScore;
import com.example.jooq.generated.tables.records.InitialScoreRecord;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class InitialScoreDao
    extends DAOImpl<
        InitialScoreRecord, com.example.jooq.generated.tables.pojos.InitialScore, Long> {

  /** Create a new InitialScoreDao without any configuration */
  public InitialScoreDao() {
    super(InitialScore.INITIAL_SCORE, com.example.jooq.generated.tables.pojos.InitialScore.class);
  }

  /** Create a new InitialScoreDao with an attached configuration */
  public InitialScoreDao(Configuration configuration) {
    super(
        InitialScore.INITIAL_SCORE,
        com.example.jooq.generated.tables.pojos.InitialScore.class,
        configuration);
  }

  @Override
  public Long getId(com.example.jooq.generated.tables.pojos.InitialScore object) {
    return object.getId();
  }

  /**
   * Fetch records that have <code>id BETWEEN lowerInclusive AND
   * upperInclusive</code>
   */
  public List<com.example.jooq.generated.tables.pojos.InitialScore> fetchRangeOfId(
      Long lowerInclusive, Long upperInclusive) {
    return fetchRange(InitialScore.INITIAL_SCORE.ID, lowerInclusive, upperInclusive);
  }

  /** Fetch records that have <code>id IN (values)</code> */
  public List<com.example.jooq.generated.tables.pojos.InitialScore> fetchById(Long... values) {
    return fetch(InitialScore.INITIAL_SCORE.ID, values);
  }

  /** Fetch a unique record that has <code>id = value</code> */
  public com.example.jooq.generated.tables.pojos.InitialScore fetchOneById(Long value) {
    return fetchOne(InitialScore.INITIAL_SCORE.ID, value);
  }

  /** Fetch a unique record that has <code>id = value</code> */
  public Optional<com.example.jooq.generated.tables.pojos.InitialScore> fetchOptionalById(
      Long value) {
    return fetchOptional(InitialScore.INITIAL_SCORE.ID, value);
  }

  /**
   * Fetch records that have <code>years BETWEEN lowerInclusive AND
   * upperInclusive</code>
   */
  public List<com.example.jooq.generated.tables.pojos.InitialScore> fetchRangeOfYears(
      Integer lowerInclusive, Integer upperInclusive) {
    return fetchRange(InitialScore.INITIAL_SCORE.YEARS, lowerInclusive, upperInclusive);
  }

  /** Fetch records that have <code>years IN (values)</code> */
  public List<com.example.jooq.generated.tables.pojos.InitialScore> fetchByYears(
      Integer... values) {
    return fetch(InitialScore.INITIAL_SCORE.YEARS, values);
  }

  /**
   * Fetch records that have <code>score BETWEEN lowerInclusive AND
   * upperInclusive</code>
   */
  public List<com.example.jooq.generated.tables.pojos.InitialScore> fetchRangeOfScore(
      Integer lowerInclusive, Integer upperInclusive) {
    return fetchRange(InitialScore.INITIAL_SCORE.SCORE, lowerInclusive, upperInclusive);
  }

  /** Fetch records that have <code>score IN (values)</code> */
  public List<com.example.jooq.generated.tables.pojos.InitialScore> fetchByScore(
      Integer... values) {
    return fetch(InitialScore.INITIAL_SCORE.SCORE, values);
  }

  /**
   * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
   * upperInclusive</code>
   */
  public List<com.example.jooq.generated.tables.pojos.InitialScore> fetchRangeOfCreatedAt(
      LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
    return fetchRange(InitialScore.INITIAL_SCORE.CREATED_AT, lowerInclusive, upperInclusive);
  }

  /** Fetch records that have <code>created_at IN (values)</code> */
  public List<com.example.jooq.generated.tables.pojos.InitialScore> fetchByCreatedAt(
      LocalDateTime... values) {
    return fetch(InitialScore.INITIAL_SCORE.CREATED_AT, values);
  }

  /**
   * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
   * upperInclusive</code>
   */
  public List<com.example.jooq.generated.tables.pojos.InitialScore> fetchRangeOfUpdatedAt(
      LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
    return fetchRange(InitialScore.INITIAL_SCORE.UPDATED_AT, lowerInclusive, upperInclusive);
  }

  /** Fetch records that have <code>updated_at IN (values)</code> */
  public List<com.example.jooq.generated.tables.pojos.InitialScore> fetchByUpdatedAt(
      LocalDateTime... values) {
    return fetch(InitialScore.INITIAL_SCORE.UPDATED_AT, values);
  }
}
