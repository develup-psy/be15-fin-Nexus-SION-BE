/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.generated.tables.daos;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import com.example.jooq.generated.tables.Certificate;
import com.example.jooq.generated.tables.records.CertificateRecord;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class CertificateDao
    extends DAOImpl<
        CertificateRecord, com.example.jooq.generated.tables.pojos.Certificate, String> {

  /** Create a new CertificateDao without any configuration */
  public CertificateDao() {
    super(Certificate.CERTIFICATE, com.example.jooq.generated.tables.pojos.Certificate.class);
  }

  /** Create a new CertificateDao with an attached configuration */
  public CertificateDao(Configuration configuration) {
    super(
        Certificate.CERTIFICATE,
        com.example.jooq.generated.tables.pojos.Certificate.class,
        configuration);
  }

  @Override
  public String getId(com.example.jooq.generated.tables.pojos.Certificate object) {
    return object.getCertificateName();
  }

  /**
   * Fetch records that have <code>certificate_name BETWEEN lowerInclusive AND
   * upperInclusive</code>
   */
  public List<com.example.jooq.generated.tables.pojos.Certificate> fetchRangeOfCertificateName(
      String lowerInclusive, String upperInclusive) {
    return fetchRange(Certificate.CERTIFICATE.CERTIFICATE_NAME, lowerInclusive, upperInclusive);
  }

  /** Fetch records that have <code>certificate_name IN (values)</code> */
  public List<com.example.jooq.generated.tables.pojos.Certificate> fetchByCertificateName(
      String... values) {
    return fetch(Certificate.CERTIFICATE.CERTIFICATE_NAME, values);
  }

  /** Fetch a unique record that has <code>certificate_name = value</code> */
  public com.example.jooq.generated.tables.pojos.Certificate fetchOneByCertificateName(
      String value) {
    return fetchOne(Certificate.CERTIFICATE.CERTIFICATE_NAME, value);
  }

  /** Fetch a unique record that has <code>certificate_name = value</code> */
  public Optional<com.example.jooq.generated.tables.pojos.Certificate>
      fetchOptionalByCertificateName(String value) {
    return fetchOptional(Certificate.CERTIFICATE.CERTIFICATE_NAME, value);
  }

  /**
   * Fetch records that have <code>score BETWEEN lowerInclusive AND
   * upperInclusive</code>
   */
  public List<com.example.jooq.generated.tables.pojos.Certificate> fetchRangeOfScore(
      Integer lowerInclusive, Integer upperInclusive) {
    return fetchRange(Certificate.CERTIFICATE.SCORE, lowerInclusive, upperInclusive);
  }

  /** Fetch records that have <code>score IN (values)</code> */
  public List<com.example.jooq.generated.tables.pojos.Certificate> fetchByScore(Integer... values) {
    return fetch(Certificate.CERTIFICATE.SCORE, values);
  }

  /**
   * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
   * upperInclusive</code>
   */
  public List<com.example.jooq.generated.tables.pojos.Certificate> fetchRangeOfCreatedAt(
      LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
    return fetchRange(Certificate.CERTIFICATE.CREATED_AT, lowerInclusive, upperInclusive);
  }

  /** Fetch records that have <code>created_at IN (values)</code> */
  public List<com.example.jooq.generated.tables.pojos.Certificate> fetchByCreatedAt(
      LocalDateTime... values) {
    return fetch(Certificate.CERTIFICATE.CREATED_AT, values);
  }

  /**
   * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
   * upperInclusive</code>
   */
  public List<com.example.jooq.generated.tables.pojos.Certificate> fetchRangeOfUpdatedAt(
      LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
    return fetchRange(Certificate.CERTIFICATE.UPDATED_AT, lowerInclusive, upperInclusive);
  }

  /** Fetch records that have <code>updated_at IN (values)</code> */
  public List<com.example.jooq.generated.tables.pojos.Certificate> fetchByUpdatedAt(
      LocalDateTime... values) {
    return fetch(Certificate.CERTIFICATE.UPDATED_AT, values);
  }

  /**
   * Fetch records that have <code>issuing_organization BETWEEN lowerInclusive
   * AND upperInclusive</code>
   */
  public List<com.example.jooq.generated.tables.pojos.Certificate> fetchRangeOfIssuingOrganization(
      String lowerInclusive, String upperInclusive) {
    return fetchRange(Certificate.CERTIFICATE.ISSUING_ORGANIZATION, lowerInclusive, upperInclusive);
  }

  /** Fetch records that have <code>issuing_organization IN (values)</code> */
  public List<com.example.jooq.generated.tables.pojos.Certificate> fetchByIssuingOrganization(
      String... values) {
    return fetch(Certificate.CERTIFICATE.ISSUING_ORGANIZATION, values);
  }
}
