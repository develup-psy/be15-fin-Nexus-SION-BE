/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.generated.tables.daos;


import com.example.jooq.generated.enums.SquadOriginType;
import com.example.jooq.generated.tables.Squad;
import com.example.jooq.generated.tables.records.SquadRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SquadDao extends DAOImpl<SquadRecord, com.example.jooq.generated.tables.pojos.Squad, String> {

    /**
     * Create a new SquadDao without any configuration
     */
    public SquadDao() {
        super(Squad.SQUAD, com.example.jooq.generated.tables.pojos.Squad.class);
    }

    /**
     * Create a new SquadDao with an attached configuration
     */
    public SquadDao(Configuration configuration) {
        super(Squad.SQUAD, com.example.jooq.generated.tables.pojos.Squad.class, configuration);
    }

    @Override
    public String getId(com.example.jooq.generated.tables.pojos.Squad object) {
        return object.getSquadCode();
    }

    /**
     * Fetch records that have <code>squad_code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchRangeOfSquadCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Squad.SQUAD.SQUAD_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>squad_code IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchBySquadCode(String... values) {
        return fetch(Squad.SQUAD.SQUAD_CODE, values);
    }

    /**
     * Fetch a unique record that has <code>squad_code = value</code>
     */
    public com.example.jooq.generated.tables.pojos.Squad fetchOneBySquadCode(String value) {
        return fetchOne(Squad.SQUAD.SQUAD_CODE, value);
    }

    /**
     * Fetch a unique record that has <code>squad_code = value</code>
     */
    public Optional<com.example.jooq.generated.tables.pojos.Squad> fetchOptionalBySquadCode(String value) {
        return fetchOptional(Squad.SQUAD.SQUAD_CODE, value);
    }

    /**
     * Fetch records that have <code>project_code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchRangeOfProjectCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Squad.SQUAD.PROJECT_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>project_code IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchByProjectCode(String... values) {
        return fetch(Squad.SQUAD.PROJECT_CODE, values);
    }

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchRangeOfTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(Squad.SQUAD.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchByTitle(String... values) {
        return fetch(Squad.SQUAD.TITLE, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Squad.SQUAD.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchByDescription(String... values) {
        return fetch(Squad.SQUAD.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>is_active BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchRangeOfIsActive(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(Squad.SQUAD.IS_ACTIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_active IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchByIsActive(Byte... values) {
        return fetch(Squad.SQUAD.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Squad.SQUAD.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Squad.SQUAD.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Squad.SQUAD.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Squad.SQUAD.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>estimated_duration BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchRangeOfEstimatedDuration(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Squad.SQUAD.ESTIMATED_DURATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>estimated_duration IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchByEstimatedDuration(BigDecimal... values) {
        return fetch(Squad.SQUAD.ESTIMATED_DURATION, values);
    }

    /**
     * Fetch records that have <code>estimated_cost BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchRangeOfEstimatedCost(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Squad.SQUAD.ESTIMATED_COST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>estimated_cost IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchByEstimatedCost(BigDecimal... values) {
        return fetch(Squad.SQUAD.ESTIMATED_COST, values);
    }

    /**
     * Fetch records that have <code>origin_type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchRangeOfOriginType(SquadOriginType lowerInclusive, SquadOriginType upperInclusive) {
        return fetchRange(Squad.SQUAD.ORIGIN_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>origin_type IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchByOriginType(SquadOriginType... values) {
        return fetch(Squad.SQUAD.ORIGIN_TYPE, values);
    }

    /**
     * Fetch records that have <code>recommendation_reason BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchRangeOfRecommendationReason(String lowerInclusive, String upperInclusive) {
        return fetchRange(Squad.SQUAD.RECOMMENDATION_REASON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>recommendation_reason IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.Squad> fetchByRecommendationReason(String... values) {
        return fetch(Squad.SQUAD.RECOMMENDATION_REASON, values);
    }
}
