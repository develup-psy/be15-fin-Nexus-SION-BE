/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.generated.tables.records;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import com.example.jooq.generated.tables.Notification;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class NotificationRecord extends UpdatableRecordImpl<NotificationRecord>
    implements Record8<Long, String, String, String, Byte, LocalDateTime, LocalDateTime, String> {

  private static final long serialVersionUID = 1L;

  /** Setter for <code>SION.notification.notification_id</code>. */
  public void setNotificationId(Long value) {
    set(0, value);
  }

  /** Getter for <code>SION.notification.notification_id</code>. */
  public Long getNotificationId() {
    return (Long) get(0);
  }

  /** Setter for <code>SION.notification.notification_type</code>. */
  public void setNotificationType(String value) {
    set(1, value);
  }

  /** Getter for <code>SION.notification.notification_type</code>. */
  public String getNotificationType() {
    return (String) get(1);
  }

  /** Setter for <code>SION.notification.linked_content_id</code>. */
  public void setLinkedContentId(String value) {
    set(2, value);
  }

  /** Getter for <code>SION.notification.linked_content_id</code>. */
  public String getLinkedContentId() {
    return (String) get(2);
  }

  /** Setter for <code>SION.notification.message</code>. */
  public void setMessage(String value) {
    set(3, value);
  }

  /** Getter for <code>SION.notification.message</code>. */
  public String getMessage() {
    return (String) get(3);
  }

  /** Setter for <code>SION.notification.is_read</code>. */
  public void setIsRead(Byte value) {
    set(4, value);
  }

  /** Getter for <code>SION.notification.is_read</code>. */
  public Byte getIsRead() {
    return (Byte) get(4);
  }

  /** Setter for <code>SION.notification.created_at</code>. */
  public void setCreatedAt(LocalDateTime value) {
    set(5, value);
  }

  /** Getter for <code>SION.notification.created_at</code>. */
  public LocalDateTime getCreatedAt() {
    return (LocalDateTime) get(5);
  }

  /** Setter for <code>SION.notification.updated_at</code>. */
  public void setUpdatedAt(LocalDateTime value) {
    set(6, value);
  }

  /** Getter for <code>SION.notification.updated_at</code>. */
  public LocalDateTime getUpdatedAt() {
    return (LocalDateTime) get(6);
  }

  /** Setter for <code>SION.notification.receiver_id</code>. */
  public void setReceiverId(String value) {
    set(7, value);
  }

  /** Getter for <code>SION.notification.receiver_id</code>. */
  public String getReceiverId() {
    return (String) get(7);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<Long> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record8 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row8<Long, String, String, String, Byte, LocalDateTime, LocalDateTime, String>
      fieldsRow() {
    return (Row8) super.fieldsRow();
  }

  @Override
  public Row8<Long, String, String, String, Byte, LocalDateTime, LocalDateTime, String>
      valuesRow() {
    return (Row8) super.valuesRow();
  }

  @Override
  public Field<Long> field1() {
    return Notification.NOTIFICATION.NOTIFICATION_ID;
  }

  @Override
  public Field<String> field2() {
    return Notification.NOTIFICATION.NOTIFICATION_TYPE;
  }

  @Override
  public Field<String> field3() {
    return Notification.NOTIFICATION.LINKED_CONTENT_ID;
  }

  @Override
  public Field<String> field4() {
    return Notification.NOTIFICATION.MESSAGE;
  }

  @Override
  public Field<Byte> field5() {
    return Notification.NOTIFICATION.IS_READ;
  }

  @Override
  public Field<LocalDateTime> field6() {
    return Notification.NOTIFICATION.CREATED_AT;
  }

  @Override
  public Field<LocalDateTime> field7() {
    return Notification.NOTIFICATION.UPDATED_AT;
  }

  @Override
  public Field<String> field8() {
    return Notification.NOTIFICATION.RECEIVER_ID;
  }

  @Override
  public Long component1() {
    return getNotificationId();
  }

  @Override
  public String component2() {
    return getNotificationType();
  }

  @Override
  public String component3() {
    return getLinkedContentId();
  }

  @Override
  public String component4() {
    return getMessage();
  }

  @Override
  public Byte component5() {
    return getIsRead();
  }

  @Override
  public LocalDateTime component6() {
    return getCreatedAt();
  }

  @Override
  public LocalDateTime component7() {
    return getUpdatedAt();
  }

  @Override
  public String component8() {
    return getReceiverId();
  }

  @Override
  public Long value1() {
    return getNotificationId();
  }

  @Override
  public String value2() {
    return getNotificationType();
  }

  @Override
  public String value3() {
    return getLinkedContentId();
  }

  @Override
  public String value4() {
    return getMessage();
  }

  @Override
  public Byte value5() {
    return getIsRead();
  }

  @Override
  public LocalDateTime value6() {
    return getCreatedAt();
  }

  @Override
  public LocalDateTime value7() {
    return getUpdatedAt();
  }

  @Override
  public String value8() {
    return getReceiverId();
  }

  @Override
  public NotificationRecord value1(Long value) {
    setNotificationId(value);
    return this;
  }

  @Override
  public NotificationRecord value2(String value) {
    setNotificationType(value);
    return this;
  }

  @Override
  public NotificationRecord value3(String value) {
    setLinkedContentId(value);
    return this;
  }

  @Override
  public NotificationRecord value4(String value) {
    setMessage(value);
    return this;
  }

  @Override
  public NotificationRecord value5(Byte value) {
    setIsRead(value);
    return this;
  }

  @Override
  public NotificationRecord value6(LocalDateTime value) {
    setCreatedAt(value);
    return this;
  }

  @Override
  public NotificationRecord value7(LocalDateTime value) {
    setUpdatedAt(value);
    return this;
  }

  @Override
  public NotificationRecord value8(String value) {
    setReceiverId(value);
    return this;
  }

  @Override
  public NotificationRecord values(
      Long value1,
      String value2,
      String value3,
      String value4,
      Byte value5,
      LocalDateTime value6,
      LocalDateTime value7,
      String value8) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    value5(value5);
    value6(value6);
    value7(value7);
    value8(value8);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /** Create a detached NotificationRecord */
  public NotificationRecord() {
    super(Notification.NOTIFICATION);
  }

  /** Create a detached, initialised NotificationRecord */
  public NotificationRecord(
      Long notificationId,
      String notificationType,
      String linkedContentId,
      String message,
      Byte isRead,
      LocalDateTime createdAt,
      LocalDateTime updatedAt,
      String receiverId) {
    super(Notification.NOTIFICATION);

    setNotificationId(notificationId);
    setNotificationType(notificationType);
    setLinkedContentId(linkedContentId);
    setMessage(message);
    setIsRead(isRead);
    setCreatedAt(createdAt);
    setUpdatedAt(updatedAt);
    setReceiverId(receiverId);
    resetChangedOnNotNull();
  }

  /** Create a detached, initialised NotificationRecord */
  public NotificationRecord(com.example.jooq.generated.tables.pojos.Notification value) {
    super(Notification.NOTIFICATION);

    if (value != null) {
      setNotificationId(value.getNotificationId());
      setNotificationType(value.getNotificationType());
      setLinkedContentId(value.getLinkedContentId());
      setMessage(value.getMessage());
      setIsRead(value.getIsRead());
      setCreatedAt(value.getCreatedAt());
      setUpdatedAt(value.getUpdatedAt());
      setReceiverId(value.getReceiverId());
      resetChangedOnNotNull();
    }
  }
}
