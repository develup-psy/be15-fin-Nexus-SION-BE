/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.generated.tables.records;


import com.example.jooq.generated.tables.TechStack;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TechStackRecord extends UpdatableRecordImpl<TechStackRecord> implements Record3<String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sion.tech_stack.tech_stack_name</code>.
     */
    public void setTechStackName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>sion.tech_stack.tech_stack_name</code>.
     */
    public String getTechStackName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>sion.tech_stack.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>sion.tech_stack.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>sion.tech_stack.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>sion.tech_stack.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TechStack.TECH_STACK.TECH_STACK_NAME;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return TechStack.TECH_STACK.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return TechStack.TECH_STACK.UPDATED_AT;
    }

    @Override
    public String component1() {
        return getTechStackName();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component3() {
        return getUpdatedAt();
    }

    @Override
    public String value1() {
        return getTechStackName();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value3() {
        return getUpdatedAt();
    }

    @Override
    public TechStackRecord value1(String value) {
        setTechStackName(value);
        return this;
    }

    @Override
    public TechStackRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public TechStackRecord value3(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public TechStackRecord values(String value1, LocalDateTime value2, LocalDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TechStackRecord
     */
    public TechStackRecord() {
        super(TechStack.TECH_STACK);
    }

    /**
     * Create a detached, initialised TechStackRecord
     */
    public TechStackRecord(String techStackName, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(TechStack.TECH_STACK);

        setTechStackName(techStackName);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TechStackRecord
     */
    public TechStackRecord(com.example.jooq.generated.tables.pojos.TechStack value) {
        super(TechStack.TECH_STACK);

        if (value != null) {
            setTechStackName(value.getTechStackName());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
